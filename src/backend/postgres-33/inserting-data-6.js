// Postgres 33

// Inserting Data 33.6

    // overview: In this lesson, you will focus on the INSERT statement, which is part of data manipulation language. If you want to create data, you need to use the SQL keyword INSERT.

// terms:

    // data manipulation language: DML, a subset of SQL commands used to manipulate data in the database

// DO THIS: Create The articles Table

    /*
    create table if not exists articles (
        article_id INTEGER primary key generated by default as identity,
        title varchar(255) not null unique,
        abstract text not null,
        body varchar,
        author text not null,
        created_date DATE not null default current_date 
    );
    */

// The INSERT INTO statement

    // syntax

    /*
    INSERT INTO <table name>
        (<column list>)
        VALUES
            (<value list>);
    */

    // column list is a comma-separated list of the column names for which you are providing a value

    // the columns may be listed in any order, but the order of the values in the value list must match the order of the column names

    // TIP: character data in SQL is enclosed in single quotes

    // To see the data in the table run the following script

    // SELECT * FROM articles;

// Table Constraints
    
// DO THIS: Try To Insert A Duplicate Title

    // Try to insert another article with the title "Pulp Fiction."

    // This time, you get an error message, because the UNIQUE constraint that you placed on the title column was violated.

    // Note: Unlike DDL statements (such as CREATE TABLE), it is difficult to write INSERT INTO statements that can be run multiple times and only insert the new record if the data doesn't already exist.

// Script Files

    /*Insert this into a new file called customers.sql:

    -- Write a comment in a SQL file with '--'
    -- First, remove the table if it exists
    DROP TABLE IF EXISTS customers;

    -- Create the table anew
    CREATE TABLE customers (
        customer_id INTEGER primary key generated by default as identity,
        customer_name varchar NOT NULL,
        phone VARCHAR(30)
    );

    -- Insert some test data, using a multi-row insert statement here
    INSERT INTO customers (customer_name, phone)
    VALUES
        ('Sam', '555-1254'),
        ('Ham', '555-4321'),
        ('Ram', '555-5678');
        
    */

    // To run this script in DBeaver, first make sure that you are connected to a database.
        
        // Then, select File from the menu bar, select Open file, and open the SQL script that you created.

        // Make sure that the active data source is development and the active schema is public, the click Execute script.